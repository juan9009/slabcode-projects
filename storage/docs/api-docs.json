{
    "swagger": "2.0",
    "info": {
        "title": "Slab Code Projects APIs",
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Signup user",
                "description": "Signup user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be signup",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": "nombre",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "email",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "password",
                                    "type": "string"
                                },
                                "roles": {
                                    "description": "roles",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Registrar usuario",
                                    "type": "string",
                                    "example": "Successfully created user!"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Registrar usuario",
                                    "type": "string",
                                    "example": "The given data was invalid."
                                },
                                "errors": {
                                    "description": "errors object",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Login user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be login",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "email",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "password",
                                    "type": "string"
                                },
                                "remember_me": {
                                    "description": "remember password",
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "access_token": {
                                    "description": "Inicio de sesi\u00f3n y generaci\u00f3n de token",
                                    "type": "string",
                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9....."
                                },
                                "token_type": {
                                    "description": "Inicio de sesi\u00f3n y generaci\u00f3n de token",
                                    "type": "string",
                                    "example": "Bearer"
                                },
                                "expires_at": {
                                    "description": "Inicio de sesi\u00f3n y generaci\u00f3n de token",
                                    "type": "string",
                                    "example": "2020-12-18 02:58:28"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Cierre de sesi\u00f3n, inhabilitar token",
                                    "type": "string",
                                    "example": "Successfully logged out"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User info",
                "description": "User info",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "id",
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 1
                                },
                                "name": {
                                    "description": "nombre",
                                    "type": "string",
                                    "example": "Juan Leal"
                                },
                                "email": {
                                    "description": "email",
                                    "type": "string",
                                    "example": "juanglealp@gmail.com"
                                },
                                "email_verified_at": {
                                    "description": "email verified at",
                                    "type": "boolean",
                                    "example": false
                                },
                                "created_at": {
                                    "description": "Devolver datos del usuario auntenticado",
                                    "type": "string",
                                    "example": "2020-11-11T02:47:42.000000Z"
                                },
                                "updated_at": {
                                    "description": "Devolver datos del usuario auntenticado",
                                    "type": "string",
                                    "example": "2020-12-11T10:23:12.000000Z"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user/{id}/disable": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Disable user",
                "description": "Disable user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Disable User",
                                    "type": "string",
                                    "example": "User disable successfully"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user/changepassword": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change password user",
                "description": "Change password user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Change password user.",
                                    "type": "string",
                                    "example": "Password change successfully"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get a listing of the Projects.",
                "description": "Get all Projects",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Project"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Store a newly created Project in storage",
                "description": "Store Project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Project that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Project"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Display the specified Project",
                "description": "Get Project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Project"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update the specified Project in storage",
                "description": "Update Project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Project that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Project"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Remove the specified Project from storage",
                "description": "Delete Project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/projects/{id}/finish": {
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Finish a specified Project",
                "description": "Finish Project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Project that should be finished",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Project"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get a listing of the Tasks.",
                "description": "Get all Tasks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Task"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Store a newly created Task in storage",
                "description": "Store Task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Task that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Task"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Display the specified Task",
                "description": "Get Task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Task"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Update the specified Task in storage",
                "description": "Update Task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Task that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Task"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Remove the specified Task from storage",
                "description": "Delete Task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/finish": {
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Finish the specified Task in storage",
                "description": "Finish Task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Task that should be finished",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Task"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Project": {
            "required": [
                "name",
                "description",
                "status",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "start_date": {
                    "description": "start_date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "description": "end_date",
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "description": "status",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Task": {
            "required": [
                "name",
                "description",
                "execution_date",
                "status",
                "projects_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "execution_date": {
                    "description": "execution_date",
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "description": "status",
                    "type": "integer",
                    "format": "int32"
                },
                "projects_id": {
                    "description": "projects_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "User": {
            "required": [
                "name",
                "email",
                "password"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "nombre",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                }
            }
        }
    }
}